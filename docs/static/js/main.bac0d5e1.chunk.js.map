{"version":3,"sources":["react-friend-ranking/Components/Elements/Header/Header.tsx","react-friend-ranking/Components/Elements/FriendForm/FriendForm.tsx","react-friend-ranking/Components/Elements/Friends/Friends.tsx","react-friend-ranking/Stores/FriendStore.tsx","react-friend-ranking/Components/Elements/Footer/Footer.tsx","react-friend-ranking/Components/Pages/Home.tsx","react-friend-ranking/ReactFriendRanking.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["Header","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","React","Component","FriendForm","_this","state","friend","name","valid","_this2","onSubmit","e","submit","autoComplete","type","placeholder","value","onChange","onNameChange","data-glyph","aria-hidden","min","max","maxRankNumber","undefined","index","onIndexChange","onClick","clean","disabled","preventDefault","isValid","setState","target","checked","defineProperty","parseInt","toString","trim","Friends","Elements_FriendForm_FriendForm","friends","length","map","element","getFriendCard","canRaise","canLower","Fragment","raiseFriendRank","title","lowerFriendRank","_this3","key","getIcons","removeFriend","FriendStore","localFriends","localStorage","getItem","JSON","parse","Array","setFriends","setItem","stringify","newFriends","i","push","construct","toConsumableArray","rank","remove","splice","Footer","Home","store","getFriends","Elements_Header_Header","Elements_Friends_Friends","Elements_Footer_Footer","addFriend","ReactFriendRanking","document","Components_Pages_Home","App","src_react_friend_ranking_ReactFriendRanking","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bac0d5e1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface IHeaderProps {\r\n    className: string;\r\n}\r\n\r\nclass Header extends React.Component<IHeaderProps> {\r\n    constructor(props: IHeaderProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <section className={\"hero is-dark is-bold \"+this.props.className}>\r\n                <div className=\"hero-body\">\r\n                    <div className=\"container\">\r\n                        <h1 className=\"title\">\r\n                            Friend ranking\r\n                        </h1>\r\n                        <h2 className=\"subtitle\">\r\n                            Rank your friends\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { IFriend } from \"../../../Entities/IFriend\";\r\n\r\ninterface IFriendFormProps {\r\n    maxRankNumber: number;\r\n    onSubmit: (friend: IFriend, index: number) => void;\r\n}\r\n\r\ninterface IFriendFormState {\r\n    friend: IFriend,\r\n    index?: number,\r\n    valid: boolean | \"\" | undefined\r\n}\r\n\r\nclass FriendForm extends React.Component<IFriendFormProps, IFriendFormState> {\r\n    public constructor(props: IFriendFormProps) {\r\n        super(props);\r\n        this.state = {\r\n            friend: { name: \"\" },\r\n            valid: false,\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"margin-bottom margin-top\">\r\n                <div className=\"title has-text-white is-4\">\r\n                    Add friend:\r\n                </div>\r\n                <form onSubmit={(e) => { this.submit(e); }} autoComplete=\"off\">\r\n                    <div className=\"field is-horizontal\">\r\n                        <div className=\"field-body\">\r\n                            <div className=\"field\">\r\n                                <p className=\"control is-expanded has-icons-left\" >\r\n                                    <input className=\"input\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Name\"\r\n                                        name=\"name\"\r\n                                        value={this.state.friend ? (this.state.friend.name ? this.state.friend.name : \"\") : \"\"}\r\n                                        onChange={(e) => { this.onNameChange(e) }} />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <span className=\"oi\" data-glyph=\"person\" aria-hidden=\"true\"></span>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <p className=\"control has-icons-left\">\r\n                                    <input className=\"input\"\r\n                                        type=\"number\"\r\n                                        name=\"index\"\r\n                                        placeholder=\"Rank\"\r\n                                        min=\"1\"\r\n                                        max={this.props.maxRankNumber}\r\n                                        value={this.state.index !== undefined ? this.state.index : this.props.maxRankNumber}\r\n                                        onChange={(e) => { this.onIndexChange(e) }} />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <span className=\"oi\" data-glyph=\"elevator\" aria-hidden=\"true\"></span>\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"level submit-btn\">\r\n                        <div className=\"level-left\">\r\n\r\n                        </div>\r\n                        <div className=\"level-right\">\r\n                            <button className=\"button margin-left is-danger\" type=\"button\" onClick={() => { this.clean() }}>Clean</button>\r\n                            <button className={\"button margin-left \" + (this.state.valid ? \"is-success\" : \"\")} type=\"submit\" disabled={!this.state.valid}>Add</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private isValid(friend: IFriend, index: number): boolean | \"\" | undefined {\r\n        return friend.name && index !== undefined;\r\n    }\r\n\r\n    private submit(e: React.FormEvent<HTMLFormElement>): void {\r\n        e.preventDefault();\r\n        if (this.isValid(this.state.friend, this.state.index ? this.state.index : this.props.maxRankNumber)) {\r\n            this.props.onSubmit(this.state.friend, this.state.index ? this.state.index : this.props.maxRankNumber);\r\n            this.clean();\r\n        }\r\n    }\r\n\r\n    private clean() {\r\n        this.setState({\r\n            friend: { name: \"\" },\r\n            index: undefined,\r\n            valid: false,\r\n        });\r\n    }\r\n\r\n    private onNameChange(e: any): void {\r\n        const target = e.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        const friend: IFriend = { [name]: value };\r\n        this.setState({\r\n            friend,\r\n            valid: this.isValid(friend, this.state.index ? this.state.index : this.props.maxRankNumber)\r\n        });\r\n    }\r\n\r\n    private onIndexChange(e: any): void {\r\n        const target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : parseInt(target.value.toString().trim());\r\n\r\n        if (value < 1)\r\n            value = 1;\r\n        else if (value > this.props.maxRankNumber)\r\n            value = this.props.maxRankNumber;\r\n\r\n        this.setState({\r\n            index: value,\r\n            valid: this.isValid(this.state.friend, value)\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport default FriendForm;","import React from \"react\";\r\nimport { IFriend } from \"../../../Entities/IFriend\";\r\nimport \"./Friends.scss\";\r\nimport FriendForm from \"../FriendForm/FriendForm\";\r\n\r\ninterface IFriendsProps {\r\n    className: string;\r\n    friends: Array<IFriend>;\r\n    raiseFriendRank: (index: number) => void;\r\n    lowerFriendRank: (index: number) => void;\r\n    removeFriend: (index: number) => void;\r\n    onSubmit: (friend: IFriend, index: number) => void;\r\n}\r\n\r\nclass Friends extends React.Component<IFriendsProps> {\r\n    constructor(props: IFriendsProps) {\r\n        super(props);\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className={\"has-background-dark padding \" + this.props.className}>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <FriendForm maxRankNumber={this.props.friends.length + 1} onSubmit={(friend, index) => this.props.onSubmit(friend, index)} />\r\n                    </div>\r\n                    <div className=\"columns is-mobile is-multiline\">\r\n                        {this.props.friends.map((element, index) => this.getFriendCard(element, index))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getIcons(index: number): React.ReactNode {\r\n        const canRaise = index > 0;\r\n        const canLower = index + 1 < this.props.friends.length;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"column is-full\">\r\n                    <span className={\"icon is-small \" + (canRaise ? \"enabled\" : \"disabled\")} onClick={canRaise ? (e) => { this.props.raiseFriendRank(index) } : () => { }}>\r\n                        <span className=\"oi\" data-glyph=\"caret-top\" title=\"Raise rank\" aria-hidden=\"true\"></span>\r\n                    </span>\r\n                </div>\r\n                <div className=\"column is-full\">\r\n                    <span className={\"icon is-small \" + (canLower ? \"enabled\" : \"disabled\")} onClick={canLower ? (e) => { this.props.lowerFriendRank(index) } : () => { }}>\r\n                        <span className=\"oi\" data-glyph=\"caret-bottom\" title=\"Lower rank\" aria-hidden=\"true\"></span>\r\n                    </span>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private getFriendCard(friend: IFriend, index: number): React.ReactNode {\r\n        return (\r\n            <div className=\"column is-full\" key={index}>\r\n                <div className=\"notification\">\r\n                    <div className=\"columns is-mobile\">\r\n                        <div className=\"column is-1\">\r\n                            <div className=\"columns is-multiline icons is-gapless is-mobile\">\r\n                                {this.getIcons(index)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div className=\"friend-rank\">Rank <span className=\"value\">{index + 1}</span></div>\r\n                            <div className=\"friend-name\">{friend.name}</div>\r\n                        </div>\r\n                        <div className=\"column is-1\">\r\n                            <div className=\"columns is-multiline icons is-gapless is-mobile\">\r\n                                <div className=\"column is-full\">\r\n                                    <span className=\"icon is-large has-text-danger enabled is-size-4\" onClick={(e) => { this.props.removeFriend(index) }}>\r\n                                        <span className=\"oi\" data-glyph=\"circle-x\" title=\"Remove friend\" aria-hidden=\"true\"></span>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Friends;","import { IFriend } from \"../Entities/IFriend\";\r\n\r\nclass FriendStore {\r\n    public getFriends(): IFriend[] {\r\n        let localFriends = localStorage.getItem(\"friends\");\r\n\r\n        if (localFriends) {\r\n            return JSON.parse(localFriends);\r\n        } else {\r\n            let friends = new Array<IFriend>({ name: \"Rodrigo\" }, { name: \"Kevin\" }, { name: \"Luan\" });\r\n\r\n            this.setFriends(friends);\r\n\r\n            return friends;\r\n        }\r\n    }\r\n\r\n    public setFriends(friends: IFriend[]): void {\r\n        localStorage.setItem(\"friends\", JSON.stringify(friends));\r\n    }\r\n\r\n    public raiseFriendRank(friends: IFriend[], index: number): IFriend[] {\r\n        if (index > 0) {\r\n            const newFriends = new Array<IFriend>();\r\n\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (i === (index - 1)) {\r\n                    // If I'm in the index I want to go to\r\n                    newFriends.push(friends[index]);\r\n                } else if (i === (index)) {\r\n                    // If I'm in the next index, put the previous user in there\r\n                    newFriends.push(friends[index - 1]);\r\n                } else {\r\n                    // Everyone before and after desired position gets unchanged\r\n                    newFriends.push(friends[i]);\r\n                }\r\n            }\r\n            return newFriends;\r\n        }\r\n\r\n        return new Array<IFriend>(...friends);\r\n    }\r\n\r\n    public lowerFriendRank(friends: IFriend[], index: number): IFriend[] {\r\n        if (index < (friends.length - 1)) {\r\n            const newFriends = new Array<IFriend>();\r\n\r\n            for (let i = 0; i < friends.length; i++) {\r\n                if (i === (index + 1)) {\r\n                    // If I'm in the index I want to go to\r\n                    newFriends.push(friends[index]);\r\n                } else if (i === (index)) {\r\n                    // If I'm in the next index, put the previous user in there\r\n                    newFriends.push(friends[index + 1]);\r\n                } else {\r\n                    // Everyone before and after desired position gets unchanged\r\n                    newFriends.push(friends[i]);\r\n                }\r\n            }\r\n            return newFriends;\r\n        }\r\n\r\n        return new Array<IFriend>(...friends);\r\n    }\r\n\r\n    public addFriend(friends: IFriend[], friend: IFriend, rank: number): IFriend[] {\r\n        const index = rank - 1;\r\n\r\n        if (index >= 0 && index <= friends.length) {\r\n            const newFriends = new Array<IFriend>();\r\n\r\n            for (let i = 0; i <= friends.length; i++) {\r\n                if (i < index) {\r\n                    newFriends.push(friends[i]);\r\n                } else if (i === index) {\r\n                    //const current = friends[i];\r\n                    newFriends.push(friend);\r\n\r\n                    // if (current)\r\n                    //     newFriends.push(current);\r\n                } else if (i >= index + 1) {\r\n                    const remove = index === 0 ? 1 : index;\r\n                    newFriends.push(friends[i - remove]);\r\n                }\r\n            }\r\n\r\n            return newFriends;\r\n        }\r\n\r\n        return new Array<IFriend>(...friends);\r\n    }\r\n\r\n    public removeFriend(friends: IFriend[], index: number): IFriend[] {\r\n        const newFriends = new Array<IFriend>(...friends);\r\n        newFriends.splice(index, 1);\r\n        return newFriends;\r\n    }\r\n}\r\n\r\nexport default FriendStore;","import React from \"react\";\r\n\r\ninterface IFooterProps {\r\n    className: string;\r\n}\r\n\r\nclass Footer extends React.Component<IFooterProps> {\r\n    public render() {\r\n        return (\r\n            <footer className={\"footer \"+this.props.className}>\r\n                <div className=\"content has-text-centered\">\r\n                    <p>\r\n                        <strong>react-friend-ranking</strong> made with ❤ by Matheus Assis Rios.\r\n                    </p>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./Home.scss\";\r\nimport Header from \"../Elements/Header/Header\";\r\nimport Friends from \"../Elements/Friends/Friends\";\r\nimport { IFriend } from \"../../Entities/IFriend\";\r\nimport FriendStore from \"../../Stores/FriendStore\";\r\nimport Footer from \"../Elements/Footer/Footer\";\r\n\r\ninterface IHomeProps {\r\n\r\n}\r\n\r\ninterface IHomeState {\r\n    friends: Array<IFriend>;\r\n}\r\n\r\nclass Home extends React.Component<IHomeProps, IHomeState> {\r\n    private store = new FriendStore();\r\n\r\n    constructor(props: IHomeProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            friends: this.store.getFriends(),\r\n        };\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"flex-wrapper\">\r\n                <Header className=\"flex-header\" />\r\n                <Friends className=\"flex-auto\"\r\n                    friends={this.state.friends}\r\n                    onSubmit={(friend, index) => { this.onSubmit(friend, index); }}\r\n                    removeFriend={(index: number) => { this.removeFriend(index); }}\r\n                    raiseFriendRank={(index: number) => { this.raiseFriendRank(index); }}\r\n                    lowerFriendRank={(index: number) => { this.lowerFriendRank(index); }} />\r\n                <Footer className=\"flex-footer\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private raiseFriendRank(index: number) {\r\n        this.setFriends(this.store.raiseFriendRank(this.state.friends, index));\r\n    }\r\n\r\n    private lowerFriendRank(index: number) {\r\n        this.setFriends(this.store.lowerFriendRank(this.state.friends, index));\r\n    }\r\n\r\n    private setFriends(friends: IFriend[]): void {\r\n        this.store.setFriends(friends);\r\n        this.setState({ friends });\r\n    }\r\n\r\n    private onSubmit(friend: IFriend, index: number): void {\r\n        this.setFriends(this.store.addFriend(this.state.friends, friend, index));\r\n    }\r\n\r\n    private removeFriend(index: number) {\r\n        this.setFriends(this.store.removeFriend(this.state.friends, index));\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./ReactFriendRanking.scss\";\r\nimport Home from \"./Components/Pages/Home\";\r\n\r\ninterface IReactFriendRankingProps {\r\n\r\n}\r\n\r\nclass ReactFriendRanking extends React.Component<IReactFriendRankingProps> {\r\n    constructor(props:IReactFriendRankingProps) {\r\n        super(props);\r\n        document.title = \"React friend ranking\";\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <Home />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactFriendRanking;","import React from 'react';\nimport ReactFriendRanking from './react-friend-ranking/ReactFriendRanking';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ReactFriendRanking />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config: any) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: { onUpdate: (arg0: ServiceWorkerRegistration) => void; onSuccess: (arg0: ServiceWorkerRegistration) => void; }) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: any, config: { onUpdate: (arg0: ServiceWorkerRegistration) => void; onSuccess: (arg0: ServiceWorkerRegistration) => void; }) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}